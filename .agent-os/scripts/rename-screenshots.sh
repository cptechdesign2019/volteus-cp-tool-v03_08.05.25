#!/usr/bin/env bash
# -----------------------------------------------------------------------------
# rename-screenshots.sh  ‚Äî  Interactive renamer for reference screenshots
# -----------------------------------------------------------------------------
# ‚Ä¢ Opens each PNG file inside design/reference-screens/<set>/
# ‚Ä¢ Lets you type a clearer name (without .png) or press <Enter> to skip
# ‚Ä¢ Saves the renamed file in-place
# -----------------------------------------------------------------------------
# Usage (from project root):
#   bash scripts/rename-screenshots.sh design/reference-screens/2025-07-22_v2-firebase
# -----------------------------------------------------------------------------
set -euo pipefail

DIR="${1:-design/reference-screens/2025-07-22_v2-firebase}"
if [[ ! -d "$DIR" ]]; then
  echo "‚ùå Directory not found: $DIR"
  exit 1
fi

echo "üîé Renaming screenshots in $DIR"
shopt -s nullglob
FILES=("$DIR"/*.png)
if [[ ${#FILES[@]} -eq 0 ]]; then
  echo "‚ö†Ô∏è  No PNG files found."; exit 0; fi

for f in "${FILES[@]}"; do
  echo "\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
  echo "üì∑ Opening $f ..."
  (xdg-open "$f" >/dev/null 2>&1 &)
  read -p "New name (without .png, blank = skip): " NEW
  pkill -f "$(basename "$f")" 2>/dev/null || true
  if [[ -n "$NEW" ]]; then
    mv "$f" "$DIR/${NEW}.png"
    echo "‚úÖ Renamed to ${NEW}.png"
  else
    echo "‚Ü©Ô∏è  Kept original filename"
  fi
done

echo "\nüéâ All done!"